<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>444.42</string>
	<key>AMApplicationVersion</key>
	<string>2.9</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>(* This script allows to cite specific page ranges in references from Sente in various text editors*)(* It supports a number of output formats:
	- Sente: native Sente Citation ID, formatted as {Sente CitationID@pageNo}
	- Pandoc: to use with Pandoc and citeproc, formatted as [@Sente+CitationID, pageNo]
	*)(* The formatted reference is copied to the clipboard and pasted into the selected text editor *)on run {input} -- remove for debugging / if not used as service	-- set input to "7-10"	set thePn to input -- use fake data for debugging		-- the clipboard should be reset to its original content after the end of this script	set theClipboardBefore to (the clipboard as text)	-- activeEditorsList will be populated in the course of the script's execution	set activeEditorsList to {}	-- set a list of text editors whose running status is to be checked. The order can be set to one's own preferences	set editorsList to {"Scrivener", "Sublime Text", "Microsoft Word", "TextEdit", "nvALT"}	-- set a list of output formats	set formatsList to {"Pandoc", "Sente"} -- add Zotero in the future		--    Generate variable with running apps	tell application "System Events"		set activeProcesses to (name of every process)	end tell		--    Generate list of running text editors    	repeat with appName in editorsList		if appName is in activeProcesses then			set activeEditor to appName			set end of activeEditorsList to appName		end if	end repeat		-- ask user to select from running text editors if there are more then one. Otherwiese continue with the sole running text editor or abort the script	set editorCount to (count activeEditorsList)	if editorCount = 1 then		set targetApp to (item 1 of activeEditorsList) as text	else if editorCount &gt; 0 then		set targetApp to (choose from list activeEditorsList with title "Running text editors" with prompt "Pick a text editor to send the reference's citation tag to" default items (item 1 of activeEditorsList) without multiple selections allowed) as text	else		-- Handle 0 items		display dialog "There are no running text editors" buttons {"OK"}		set targetApp to "false"	end if	-- ask user to select an output format	set targetFormat to (choose from list formatsList with title "Available output formats" with prompt "Pick an output format for the citation tag" default items (item 1 of formatsList) without multiple selections allowed) as text			-- retrieve the Citation ID of the selected reference from Sente	tell application "Sente 6"		set theRef to (retrieve selected references current library as tags)		set the clipboard to theRef as text	end tell		-- format the citation tag 	-- Sente output	if targetFormat is "Sente" then		set theTag to "{" &amp; theRef		if thePn is "" then			set theTag to theTag &amp; "}"		else			set theTag to theTag &amp; "@" &amp; thePn &amp; "}"		end if		-- Pandoc output	else if targetFormat is "Pandoc" then		-- replace blanks with "+"		set theTag to replaceText(theRef, " ", "+")		set theTag to "[@" &amp; theTag		if thePn is "" then			set theTag to theTag &amp; "]"		else			set theTag to theTag &amp; ", " &amp; thePn &amp; "]"		end if	end if		-- copy the citatin tag to the clipboard	set the clipboard to theTag as text		-- debugging	-- display dialog (the clipboard)		-- paste the CitationID and page number into the selected text editor	if targetApp is not "false" then		tell application targetApp			activate			tell application "System Events"				keystroke "v" using command down			end tell		end tell	end if		-- reset the clipboard to its original content, unfortunately, this action is done before the end of the script	-- set the clipboard to theClipboardBefore as text	end run-- helper functionon replaceText(theText, theSearchString, theReplacementString)	set AppleScript's text item delimiters to theSearchString	set theTextItems to every text item of theText	set AppleScript's text item delimiters to theReplacementString	set theText to theTextItems as text	set AppleScript's text item delimiters to ""	return theTextend replaceText</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>D2F70FCA-8C94-4FD5-B1AB-F38995AAFF15</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>CB5EB998-D731-44B1-BAD6-E70D63A26C78</string>
				<key>UUID</key>
				<string>A126CED7-9B81-4063-B7E7-DF0F14FEA2FB</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>661.500000:1192.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>applicationBundleID</key>
		<string>com.thirdstreetsoftware.sente6</string>
		<key>applicationBundleIDsByPath</key>
		<dict>
			<key>/Applications/Office-Research/Reference Manager/Sente 6.app</key>
			<string>com.thirdstreetsoftware.sente6</string>
		</dict>
		<key>applicationPath</key>
		<string>/Applications/Office-Research/Reference Manager/Sente 6.app</string>
		<key>applicationPaths</key>
		<array>
			<string>/Applications/Office-Research/Reference Manager/Sente 6.app</string>
		</array>
		<key>inputTypeIdentifier</key>
		<string>com.apple.Automator.text</string>
		<key>outputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>presentationMode</key>
		<integer>11</integer>
		<key>processesInput</key>
		<integer>0</integer>
		<key>serviceApplicationBundleID</key>
		<string>com.thirdstreetsoftware.sente6</string>
		<key>serviceApplicationPath</key>
		<string>/Applications/Office-Research/Reference Manager/Sente 6.app</string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.text</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>systemImageName</key>
		<string>NSTouchBarShare</string>
		<key>useAutomaticInputType</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
